#!/usr/bin/env python
# coding: utf-8

# # Dataset

# ### afamin

# In[56]:


# >XP_051054143.1 afamin [Phodopus roborovskii]
afamin1 = '''MWSLFYLNMKHVKFIGFIFFLFSLTESLALPTKPQDVDPFYATQKFIEENTVYLTIIAVAQYVQEVSFDE
VETLVKVMMDYRDGCLANWTLPECSKRANEAIQDMICSSEGLPQRHNISHCCSKVDFARRLCFFYNKKAK
TGFLPPFPTLDPEEKCQAYKNNNGSFLNLYMYEVARRNPFVFSPVLLTVAARFEEAATTCCEQQEKATCF
QDKAAPITQYLKASSSYQGTVCGALIKFGPKVLNSINTAVFSKKFPKIGFKDLTSLLEDVSTMYELCCEG
DVVQCIQGQSQVMNHICSKQDFISSKIKECCEKKMPERGDCIINTNKEDKPEDLSPREPKFTDSQNVCQE
RDSNQDGLLIEFTHEYSRRHNYLSTPELLRVTKVYKDLLEDCCSRENAAGCYRHAEDKFNETTEKSLAMV
QQECKLFQELEKDALKLHYLVKFTKAAPQLSLEELVYLSNGMMEVLTTCCTLSEEFACVDDLADLVLGDL
CGVNENRTINPAVDLCCRADFAFRRHCFEHLEADTTYVLPSVSALISALHSDWCQAHNEDLQNKKHRFMV
NLVKWMPEITAEECMCLFTKFTAAGEKCDEVQEPETCFHPEGSNIDNESGAANRNDKIPEP'''

# >XP_045645428.1 afamin [Ursus americanus]
afamin2 = '''MKQLKLTGFVIFLFFVPESLTLPTQPQDVDDVSITQKFIEENVGYITIIVFAQYIQEASFEEVEVLVKAM
TEYRDKCLGDMTLPRCSKLATDVLLENICALEGLPQKHNFSHCCSKVDLERKLCFLHNKKTDVGFLPPLP
TLDPEEKCQTYKNNRESFLNNYIYEISRRNPFVFAPTLLTVAARFEEMTKTCCEEQDKANCFRTKAEPVI
QYLKASSSFQKNVCGALMKFGLQVLESINVAILSQKFPKIEFKELTSLLKDVSSKYDGCCEGDAVQCIRD
RSKVMSHICSKQDSISSKIKECCEKKMPERGECIVSSTKDDRPKELALREVKFTESENVCEERDANQTIF
MAEFLYEHSRRHPELSIPELLRIAGVYEDLLKECCHTENPPDCYRRAENKFNETTEKSLKTVQRECERFQ
NLGKDDLKHYYLFKLTKIAPQLSTEELTFLGKEMVTALTTCCTLSEEFACVDNLMDLVLGELCGINENRN
INPDVDHCCKTNFAFRRPCFEGLEADKTYVPPSTSQDLFTFHTDLCQAHNEELQRKKDRFLVNLVKRKPE
LTDEALRSLLTDFTNVVVKCCKAEGPEACFNEEGPKLTAKSQAA'''

# >XP_029424380.1 afamin isoform X11 [Nannospalax galili]
afamin3 = '''MKQLKLTGFIFFLLSLTESLTLPTKPQDVDHFSAIQKFIDENTASLALIAFAQYVQEVTFEEAEMLLQVM
MEYKEKCLADTTLPECSKVANEAVQDMMCAMKGLSQRHNFSHCCSKIGFEKRLCFLYNKKANIGFLPPFP
TLDPEEKCQAYKNDRKSFLNRHMYEVARRNPFVFAPVLLTVAARFEEVATACCEEQQKANCFGVKAVPIT
QYLKGLSSYQKNVCGAFLKFGPKVLNSINIAVLSKKFPKIGFTELTSLLEDVSSMYDGCCEGDVVRCIRD
QSQVMNHICSKQDSISSKIKECCEKETPEREDCIVNTSKDDRPANLSLREPKFTDSENMCQERDSNPNDF
FAEFIYEYSRRHVDLSTPELLRITQVYKDLLEDCCRRENPPDCYRRAEEKFNETTEKSLTMVQQECKRFQ
GLGKDGLQHQLIVLYTKKAPQLSAQELVVLTRKMAAAASRCCPLRDEQQFACIEDSAKLILGALCRRHSA
EPVNARVGHCCEDSYALRKPCFDDLQVDATYISPPLSCDQVISLKEEWCRAQEEELQIEKQKLLSNLVKQ
KPHATEKQLQSVVEDVTHLMEMCCRAEKRETCFHKELLCLWKDSEFDWRQRITPRSFPKVFVDPRFQRGP
DSSQSANLSRKAKLHQNVPM'''

# >XP_030169560.1 afamin [Lynx canadensis]
afamin4 = '''MKQLKLTGFVIFLFFLTESLTLSTKPQDVDDVSITQKFIQENVGYITIIIFAQYIQEASFEEVETLVKTM
TEYRDKCLADMTLPECSELANDVLLENICALEGLPQKHNFSHCCSKVDLEKKLCFFHHKKADVGFLPPLP
TLDPEEKCQTYKNNRESFLNNYIYEVSRRNPFVFAPTLLTVAARFEEMTKTCCEEQDKANCFRTKAEPVI
QYLKASSSFQKNVCGALIKFGLQVLESINIAILSQKFPKIEFKELTSLLEDVSSKYDGCCEGDAVQCIRG
RSKVMSHICLKQDSISSKIKECCEKKIPERGECIISSNKDDRPKDLSLREAKFTESENVCEERDANQTSF
MAEFLYEYSRRHPELSTPELLRIAGVYEDLLKECCHTENPPDCYRHAEHRFNETTEKSLKIVQRECERSQ
NLGKEDLKYYYLIKLTKIAPQLSTEELTFLGKEMVTALTTCCTLSEEFACVDNLMDLVLGELCGINENRN
INPDVDHCCKTNFAFRRSCFEGLEADKAYVPPSTFQGLFTFHTDLCQAHKEELQRKKDRFLVNVVKLKPE
LPDVELRSLLTDFTNVVVKCCQAEGPEACFNEEGPKVAAKC'''

# >XP_042838664.1 afamin [Panthera tigris]
afamin5 = '''MKQLKLTGFVIFLFFLTESLTLSTKPQDVDDVSITKKFIEENVGYITIIIFAQYIQEASFEEVEMLVKTM
TEYRDKCLADMTLPECSELANDVLLENICALEGLPQKHNFSHCCSKVDLEKKLCFFHHKKADVGFLPPLP
TLDPEEKCQTYKNNRESFLNNYIYEVSRRNPFVFAPTLLTVAARFEEMTKTCCEEQDKANCFRTKAEPVI
QYLKASSSFQKNVCGALIKFGLQVLESINIAILSQKFPKIEFKELTSLLEDVSSKYDGCCEGDAVQCIRG
RSKVMSHICLKQDSISSKIKECCEKKIPERGECIISSNKDDRPKDLSLREAKFTESENVCEERDANQTSF
MAEFLYEYSRRHPELSTPELLRIAGVYEDLLKECCHTENPPDCYRHVEHRFNETTEKSLKIVQRECERSQ
NLGKEDLKYYYLIKLTKIAPQLSTEELTFLGKEMVTALTTCCTLSEEFACVDNLMDLVLGELCGINENRN
INPDVDHCCKTNFAFRRSCFEGLEADKAYVPPSTFQGLFTFHTDLCQAHKEELQRKKDRFLVNVVKLKPE
LPDAELRSLLTDFTNVVVKCCQAEGPEACFNEEGPKVAAKC'''

# >XP_025778077.1 afamin [Puma concolor]
afamin6 = '''MKQLKLTGFVIFLFFLTESLTLSTKPQDVDDVSITQKFIEENVGYITIIIFAQYIQEASFEEVEMLVKTM
TEYRDKCLADMTLPECSELANDVLLENICALEGLPQKHNFSHCCSKVDLEKKLCFFHHKKADVGFLPPLP
TLDPEEKCQTYKNNRESFLNNYIYEVSRRNPFVFAPTLLTVAARFEEMTKTCCEEQDKANCFRTKAEPVI
QYLKASSSFQKNVCGALIKFGLQVLESINVAILSQKFPKIEFKELTSLLEDVSSKYHGCCEGDAVQCIRG
RSKVMSHICLKQDSISSKIKECCEKKIPERGECIISSNKDDRPKDLSLREAKFTESENVCEERDANQTSF
MAEFLYEYSRRHPELSTPELLRITGVYEDLLKECCHTENPPDCYRHAEHRFNETTEKSLKIVQRECERSQ
NLGKEDLKYYYLIKLTKLAPQLSTEELTFLGKEMVTALTTCCTLSEEFACVDNLMDLVLGELCGINENRN
INPDVDHCCKTNFAFRRSCFEGLEADKAYVPPSTFQGLFTFHTDLCQAHKEELQRKKDRFLVNVVKLKPE
LPDAELRSLLTDFTNVVVKCCQAEGPEACFNEEGPKVAAKC'''

# >XP_008955979.2 afamin isoform X2 [Pan paniscus]
afamin7 = '''MKLLKLTGFIFFLFFLTESLTLPTQPRDVENFNSTQKFIEDNIEYITIIAFAQYVQEATFEEMEKLVKDM
VEYKDRCMADKTLPECSKLPNNVLQEKICAMEGLPQKHNFSHCCSKVDAQRRHCFFYNKKSDVGFLPPFP
TLDPEEKCQAYESNRESLLNHFLYEVARRNPFVFAPTLLTVAAHFEEVAKSCCEEQNKVDCFQTRAIPVT
QYLKAFSSYQKHVCGALLKFGTKVVHFIYIAILSQKFPKIEFKELISLVEDVSSNYDGCCEGDVVQCIRD
TSKVMNHICSKQDSISSKIKECCEKKILERGQCIINSNKDDRPKDLSLREGKFTDSENVCQERDADPDTF
FAKFTFEYSRRHPDLSIPELLRIVQIYKDLLRNCCNTENPPGCYRYAEDKFNETTEKSLKMVQQECKHFQ
NSGKDGLKYHYLIRLTKIAPQLSTEELVSLGEKMVTAFTTCCTLSEEFACVDNLTCVNLRMRSFRGRQTG
FLST'''


# ### albumin

# In[87]:


#>XP_051054159.1 albumin [Phodopus roborovskii]
albumin1 ='''MKWVTFLLLLFVSDSAFSRGLFRRDAHKSEIAHRFNDLGEQHFKGLVLIAFSQYLQKCPYEEHVKLVNEV
TDFAKTCVADESAENCGKSLHTLFGDKLCAIPNLRENYGELADCCAKQEPERNECFLKHKDDHPNLPPFV
RPEAEAMCTSFQENAAAFMGHYLHEVARRHPYFYAPELLYYAEKYSAVMTECCGEADKAACMTPKLDALK
EKALASSVHQRLKCSSLQRFGQRAFKAWAVARMSQKFPKADFAEITKLATDLTKVTEECCHGDLLECADD
RAELAKYMCENQASISSKLQVCCDKPVLKKSHCLAEVENDEMPTDLPSLAADFVEDKEVCKNYAEAKDVF
LGTFLYEYSRRHPDYSIALLLRLAKKYEATLEKCCAEADPSACYGTVLDEFQPLVEEPKNLVKANCELFE
KLGEYGFQNALLVRYTQKAPQVSTPTLVEASRSLGKVGSKCCTLPEAERLPCVEDYLTAILNRVCVLHEK
TPVSEQVTKCCTGSVVERRPCFSALPVDETYVPKEFKAETFTFHADICTLPEKEKQMKKQTALAELVKHK
PKATGDQLKTVMGEFAAFLDKCCKADDKEACFSEDGPKLVASSQAALA'''

#>XP_045645417.1 albumin [Ursus americanus]
albumin2 = '''MKWVTFISLLFLFSSAYSRGVTRREAQQSEIAHRYNDLGEEHFRGLVLVAFSQYLQQCPFEDHVKLAKEV
TEFAKGCAADQSGADCDKSLHTLFGDKLCTVASLREKYGELADCCEKQEPERNECFLKHKDDNPGFPPLV
TPEPDALCAAFQENEQRFLGKYLYEVARRHPYFYAPELLYYAQQYKGVFAECCQAADKAACLTPKIDALR
EKVLVSSARERFKCASLQKFGDRAFKAWSVARLSQRFPKADFAEVSKVVTDLTKVHKECCHGDLLECADD
RADLAKYMCENQDSISSKLKECCDKPVLEKSQCLSEVERDELPGDLPPLAADFVEDKEVCKNYQEAKDVF
LGTFLYEYSRRHPEYSVSLLLRLAKEYEATLEKCCATDDPPTCYSKVLDEFKPLVEEPQNLVKSNCELFE
KLGEYAFQNALLVRYTKKVPQVSTPTLVEVSRKLGKVGTKCCKKPESERMSCAEDYLSVVLNRLCVLHEK
TPVSERVTKCCTESLVNRRPCFSALEVDETYVPKEFNAETFTFHADLCTLPEAEKQAKKQSALVELLKHK
PKATEEQLKTVMGDFGAFVDKCCAAENKEGCFAEEGPKLVATAQAALV'''

#>XP_008841688.1 serum albumin [Nannospalax galili]
albumin3 = '''MKWVTFLLLLLSVSGSAYSRGVFRRDAHKSEIAHRYNDLGEQYFKGLVLITFAQYLQKCPYEEHLKLVHE
VADFAKACVADESAPNCDKSLHTLFGDKLCAIPTLREHYGELADCCTKQEPERNECFLKHKDDSPNLPPI
VRAEADVMCASFLENESQFMGHYVHEVARRHPYFYAPELLFYAEKYQDVMTKCCAEADKAACITPKLDAL
KEKALTSSAKQRMKCSSLQKFGERAFKAWTVARLSQKFPKADFTEVTKIVNDLTKVTKECCHGDLLECAD
DRADLAKYICENHASISSKLQECCDKPVLQKSHCIAESENDDMPADLAPLAADFVEDKEVCKNYAEAKDV
FLGSFLYENSRRHPDYSVVLLLRLAKKYENTLEKCCAEADPHACYSKVFDEFQPLVDEPKKLVKENCELF
ETLGEYKFQNALLVRYTQKAPQVSTPTLVETARHLGKVGTKCCSLPEAQRLPCVEDYLAMILNRVCVLHE
KTPVSERVTQCCTGSLVDRRPCFSALSVDEAYVPKEFKAETFTFHADTCTLPEKEKQIKKQFALAELVKH
KPKATEEQLKKVMKDFADFLEKCCAEADKEACFATEGPKLVASSQAALA'''

#>XP_030169562.1 albumin [Lynx canadensis]
albumin4 = '''MKWVTFISLLFLFSSAYSRGVTRREAQQSEIAHRFNDLGEEHFRGLVLVAFSQYLQQCPFEDHVKLVNEV
TEFAKGCVADQSAANCEKSLHELFGDKLCTVASLRDKYGEMADCCEKKEPERNECFLQHKDDNPGFGQLV
TPEADAMCTAFHENEQRFLGKYLYEIARRHPYFYAPELLYYAEEYKGVFTECCEAADKAACLTPKVDALR
EKVLASSAKERLKCASLQKFGERAFKAWSVARLSQKFPKADFAEISKLVTDLAKIHKECCHGDLLECADD
RADLAKYVCENQDSISTKLKECCGKPVLEKSHCISEVERDELPADLSPLAADFVEDKEVCKNYQEAKDVF
LGTFLYEYSRRHPEYSVSLLLRLAKEYEATLEKCCATDDPPTCYAHVFDEFKPLVEEPHNLVKTNCELFE
KLGEYGFQNALLVRYTKKVPQVSTPTLVEVSRSLGKVGSKCCTHPESERLSCAEDYLSVVLNRLCVLHEK
TPVSERVTKCCTESLVNRRPCFSALQVDETYVPKEFSAETFTFHADLCTLPEAEKQIKKQSALVELLKHK
PKATDEQLKTVMGDFGSFVDKCCAAEDKEACFAEEGPKLVATTQAALA'''

#>XP_042838668.1 albumin isoform X3 [Panthera tigris]
albumin5 = '''MKWVTFISLLLLFSSAYSRGLTRREAHQSEIAHRFNDLGEEHFRGLVLVAFSQYLQQCPFEDHVKLVNEV
TEFAKGCVADQAAANCEKSLHELFGDKLCTVASLRDKYGEMADCCEKKEPERNECFLQHKDDNPGFGQLV
TPEADAMCTAFHENEQRFLGKYLYEIARRHPYFYAPELLYYAEEYKGVFTECCEAADKAACLTPKVDALR
EKVLASSAKERLKCASLQKFGERAFKAWSVARLSQKFPKADFAEISKLVTDLAKIHKECCHGDLLECADD
RADLAKYICENQDSISTKLKECCGKPVLEKSHCISEAERDELPADLAPLAADFVEDKEVCKNYQEAKDVF
LGTFLYEYSRRHPEYSVSLLLRLAKEYEATLEKCCATDDPPTCYAHVFDEFKPLVEEPHNLVKTNCELFE
KLGEYGFQNALLVRYTKKVPQVSTPTLVEVSRSLGKVGSKCCTHPESERLSCAEDYLSVVLNRLCVLHEK
TPVSERVTKCCTESLVNRRPCFSALQVDETYVPKEFSAETFTFHADLCTLPEAEKQIKKQSALVELLKHK
PKATDEQLKTVMGDFGSFVDKCCAAEDKEACFAEEGPKLVATTQAALA'''

#>XP_025777466.1 serum albumin [Puma concolor]
albumin6 = '''MKWVTFISLLLLFSSAYSRGVTRREAQQSEIAHRFNDLGEEHFRGLVLVAFSQYLQQCPFEDHVKLVNEV
TEFAKGCVADQSAANCEKSLHELFGDKLCTVASLRDKYGEMADCCEKKEPERNECFLQHKDDNPGFGQLV
TPEADAMCTAFHENEQRFLGKYLYEIARRHPYFYAPELLYYAEEYKGVFTECCEAADKAACLTPKVDALR
EKVLASSAKERLKCASLQKFGERAFKAWSVARLSQKFPKADFAEVSKLVTDLAKIHKECCHGDLLECADD
RADLAKYICENQDSISTKLKECCAKPVLEKSHCISEAERDELPADLSPLAADFVEDKEVCKNYQEAKDVF
LGTFLYEYSRRHPEYSVSLLLRLAKEYEATLEKCCATDDPPTCYAHVFDEFKPLVEEPHNLVKTNCELFE
KLGEYGFQNALLVRYTKKVPQVSTPTLVEVSRSLGKVGSKCCTHPESERLSCAEDYLSVVLNRLCVLHEK
TPVSERVTKCCTESLVNRRPCFSALEVDETYVPKEFSAETFTFHADLCTLPEAEKQIKKQSALVELLKHK
PKATDEQLKTVMGDFGSFVDKCCAAEDKEACFAEEGPKLVATTQAALV'''

#>XP_003832390.1 serum albumin [Pan paniscus]
albumin7 = '''MKWVTFISLLFLFSSAYSRGVFRRDAHKSEVAHRFKDLGEENFKALVLVAFAQYLQQCPFEDHVKLVNEV
TEFAKTCVADESAENCDKSLHTLFGDKLCTVATLREKYGEMADCCAKQEPERNECFLQHKDDNPNLPRLV
RPEVDVMCTAFHDNEGTFLKKYLYEVARRHPYFYAPELLFFAERYKAAFTECCQAADKAACLLPKLDELR
DEGKASSAKQRLKCASLQKFGERAFKAWAVARLSQRFPKAEFAEVSKLVTDLTKVHTECCHGDLLECADD
RADLAKYICENQDSISSKLKECCEKPLLEKSHCLAEVENDEMPADLPSLAADFVESKEVCKNYAEAKDVF
LGMFLYEYARRHPDYSVVLLLRLAKTYETTLEKCCAAADPHECYAKVFDEFKPLVEEPQNLIKQNCELFE
QLGEYKFQNALLVRYTKKVPQVSTPTLVEVSRNLGKVGSKCCKHPEAKRMPCAEDYLSVVLNQLCVLHEK
TPVSDRVTKCCTESLVNRRPCFSALEVDETYVPKEFNAETFTFHADICTLSEKERQIKKQTALVELVKHK
PKATKEQLKAVMDDFAAFVEKCCKADDKETCFAEEGKKLVAASQAALGL'''


# ### alpha fetoprotein

# In[90]:


#>XP_051054042.1 alpha-fetoprotein [Phodopus roborovskii]
alpha_fetoprotein1 = '''MTALCILLPSPPASSSKQPAAMEWRVAIFFAFLLNVAESRMLHRHEFGIASTLDSSRCSTEKNMLSLATI
TFAQFVPEATLEEINKMTSDVMTAIKKPTSDEQHGGCLENQISVFLDEICHEKELSEKHGYSDCCSQSGE
ERHQCLLARKKTASASILPFSFPEAAESCKAYEENREVFMNRVVYEVSRRYPFMYAPAILSLAVQYDKTV
PVCCKAENPEECFQTKRASIAKELKEGSLLNEHVCAVIRKFGSRNLQATTIIKMSQKFPKANFTEIEKLV
LDVAHIHEECCLGNAMECLQDGEKIMSYICSQQDILSSKIAECCKLPTLELGYCIIHAENDDRPEGLSSN
LDGVLGDRNFGKLSSEEKIMFMARFLYEYSRRHTKFAVSVILRVAKTYQEIMEKCSQSEDSAACQENGEE
ELQKHIQESQALAKQSCALYQKLGDYYLQKVFLIAYTRKVPQLTSAELIDLTRKMVSIASTCCQLSEDNW
SACGEGAADLFIGHLCIRHEVNPLNPGIGHCCNSSYSNRRPCITSLVMDESYVAPPFSADKFTLNKNLCQ
AQGRTLQIMKQELLVNLVKQKPDMTEEQHEAVTADFSGFLEKCCQDQEQEACFAEEGPKLISRTRAALGV'''

#>XP_045648893.1 alpha-fetoprotein [Ursus americanus]
alpha_fetoprotein2 = '''MKWVVSISLIFLLNFSESRTMHRNAYGIASILDSSQCSAEMNLADLATIFFAQFVQEATYKEVSKMVKDI
LTVIEKSTGSEQPAGCLENQLPAFLEEICQEKEIFEKYGLSDCCSQSEEERHNCLLGHKKAAPSTIPPFQ
VPEPVTSCRAYEENRDVFMNRYIYEIARRHPFLYAPTILSLAAHYGKIIPPCCKAENAVECFQTKTALIT
KELRDSSLVNQHICAVMKNFGPRTFRAITVTKLSQKFSKANFTEIQKLVLDVAHIHEECCRGNVLECLQD
GEKIMSYICSQQDILSSKIAECCKLPILELGQCIIHAENDDRPEGLSPNLNRFLGERDFNQFSSREKDLF
MARFTYEYSRRHTKLAVPVVLRVAKGYQELLEKCSQSENPLECQDKGEEELEQYIQESQALAKRSCGLFQ
KLGEYYLQNAFLVAYTKKAPQLTPPELMAFTRKMATAAATCCQLSEDKQLACGEGAADLIIGQLCIRHEE
TPVNPGVGQCCTSSYANRRPCFSSLVVDETYIPSPFSADKFIFHKDLCQAQGVSLQTMKQQFLINLVKQK
PQITEEQLEAVIADFSGLLEKCCQGQEQEACFEEEGPKLIAKTRAALGV'''

#>XP_029424406.1 alpha-fetoprotein isoform X2 [Nannospalax galili]
alpha_fetoprotein3 = '''MFMNRYIYEVSRRHPFMYAPAILALAAHYDKIIPFCCKAENAEECFQTKTASIMKELREGSLLNEHVCAV
IKKFGTRNLQAITITKLSQKFSKANFTEIRKLVLDVAHIHEECCRGNVLECLQDGEKIMSYICSQQDSLS
SKIAECCKLPTIELGYCIIHAENDDKPEGLSPNLSRFLGDRNFGQFSSEEKIMFMASYLHEYSRRHPELA
VSVVLRIAKTYLEQLEKCSLSENPLACQDNEEELQKHIQESQALAKQSCTLFQKLGEYYLQNQFLIAYTK
KVPQLTSAELIDLTRKMVNIAATCCQLNEDKWSACGEGAADLFIGHLCIRQEANPVNPGISHCCNSSYSN
RRPCITSIVRDETYVPPPFSDDKFVFHKDLCQAQGRALQTMKQELLINLVKQKPQMTEEEHEAVTVDFSG
LLEKCCQGQEQEACFAKEGPKLVSRTRAALGV'''

#>XP_032448937.1 alpha-fetoprotein [Lynx canadensis]
alpha_fetoprotein4 = '''MKWVISIFLTFLLNFSEPRTMHRNAYGIASILDSSQCSAEMNFVDLATIFFAQFVQEATYKEVSKMVKDI
LTVIEKSTGSEQPVGCLENQLSAFLDEICHEKEISEKYGLSDCCSQSEEERHNCLLAHKKATPSSIPPFQ
VPEPVTSCKAYEENRDMFLNRYIYEIARRHPFLYAPTILSLATHYGKIIPPCCKTENAVECFQTKTALIT
KELRESSLLNQHICAVMRNFGPRTFRAITVTKLSQKFSKANFTEIQKLVLDVAHIHEECCRGNVLECLQD
GEKIMSYLCSRQDILSSKIAECCKLPILELGQCIIHAENDDTPEGLSLNLNRFLGERDFNQFSSREKDLF
MARFTYEYSRRHTKLAVPVILRVAKGYQELLEKCSQSENPLECQDKGEEELEKYIQESQALAKRSCGLFQ
KLGEYYLQNAFLVAYTKKAPQLTPPELMAFTRKMATAAATCCQLSEDKQLACGEGAADLIIGQLCIRHEE
TPVNPGVGLCCTSSYANRRPCFSSLVVDETYVPLPFSADRFIFHKDLCRAQGVALQTMKQQFLINLVKQK
PQITEEQLEAVIADFSGLLEKCCQGQEQEACFAEEGPKLISKTRAALGV'''

#>XP_042838665.1 alpha-fetoprotein [Panthera tigris]
alpha_fetoprotein5 = '''MKWVISIFLTFLLNFSEPRTMHRNAYGIASILDSSQCSAEMNFVDLATIFFAQFVQEATYKEVSKMVKDI
LTVIEKSTGSEQPVGCLENQLSAFLDEICHEKEISEKYGLSDCCSQSEEERHNCLLAHKKATPSSIPPFQ
VPEPVTSCKAYEENRDMFLNRYIYEIARRHPFLYAPTILSLATHYGKIIPPCCKTENAVECFQTKTALIT
KELRESSLLNQHICAVMRNFGPRTFRAITVTKLSQKFSKANFTEIQKLVLDVAHIHEECCRGNVLECLQD
GEKIMSYLCSRQDILSSKIAECCKLPILELGQCIIHAENDDTPEGLSPNLNRFLGERDFNQFSSREKDLF
MARFTYEYSRRHTKLAVPVILRVAKGYQELLEKCSQSENPLECQDKGEEELEKYIQESQALAKRSCGLFQ
KLGEYYLQNAFLVAYTKKAPQLTPPELMAFTRKMATAAATCCQLSEDKQLACGEGAADLIIGQLCIRHEE
TPVNPGVGLCCTSSYANRRPCFSSLVVDETYVPLPFSADRFIFHKDLCRAQGVALQTMKQQFLINLVKQK
PQITEEQLEAVIADFSGLLEKCCQGQEQEACFAEEGPKLISKTRAALGV'''

#>XP_025777828.1 alpha-fetoprotein [Puma concolor]
alpha_fetoprotein6 = '''MKWVISIFLTFLLNFSEPRTMHRNAYGIASILDSSQCSAEMNFVDLATIFFAQFVQEATYKEVSKMVKDI
LTVIEKSPGSEQPVGCLENQLSAFLDEICHEKEISEKYGLSDCCSQSEEERHNCLLAHKKATPSSIPPFQ
VPEPVTSCKAYEENRDMFLNRYIYEIARRHPFLYAPTILSLATHYGKIIPPCCKTENAVECFQTKTALIT
KELRESSLLNQHICAVMRNFGPRTFRAITVTKLSQKFSKANFTEIQKLVLDVAHIHEECCRGNVLECLQD
GEKIMSYLCSRQDILSSKIAECCKLPILELGQCIIHAENDDTPEGLSPNLNRFLGDRDFNQFSSREKDLF
MARFTYEYSRRHTKLAVPVILRVAKGYQELLEKCSQSENPLECQDKGEEELEKYIQESQALAKRSCGLFQ
KLGEYYLQNAFLVAYTKKAPQLTPPELMAFTRKMATAAATCCQLSEDKQLACGEGAADLIIGQLCIRHEE
TPVNPGVGLCCTSSYANRRPCFSSLVVDETYVPSPFSADRFIFHKDLCRAQGVALQTMKQQFLINLVKQK
PQITEEQLEAVIADFSGLLEKCCQGQEQEACFAEEGPKLISKTRAALGV'''

#>XP_024784256.1 alpha-fetoprotein isoform X2 [Pan paniscus]
alpha_fetoprotein7 = '''MNKFIYEIARRHPFLYAPTILLWAARYDKIIPSCCKAENAVECFQTKAATVTKELRESSLLNQHACAVMK
NFGTRTFQAITVTKLSQKFTKVNFTEIQKLVLDVAHVHEHCCRGDVLDCLQDGEKIMSYICSQQDTLSNK
ITECCKLTTLERGQCIIHAENDEKPEGLSPNLNRFLGDRDFNQFSSGEKNIFLASFVHEYSRRHPQLAVS
VILRVAKGYQELLEKCFQTENPLECQDKGEEELQKYIQESQALAKRSCGLFQKLGEYYLQNAFLVAYTKK
APQLTSSELMAITRKMAATAATCCQLSEDKLLACGEGAADIIIGHLCIRHEMTPVNPGVGQCCTSSYANR
RPCFSSLVVDETYVPPAFSDDKFIFHKDLCQAQGVALQTMKQEFLINLVKQKPQITEEQLEAVIADFSGL
LEKCCQGQEQEVCFAEEGQKLISKTRAALGV'''


# ### elastin

# In[91]:


#>XP_051060821.1 elastin isoform X2 [Phodopus roborovskii]
elastin1 = '''MAGLTAAVPKPGVLLIFLLNLLHPAQPGGVPGAVPGGVPGGVYYPGAGIGGLGGGAGGALGPGGKPPKPG
AGLLGAFGAGPGGLAGAGPGAGLGAFPGGAYPGAGALVPGGAAGAAAAYKAAAKAGAGLGGIGGVPGGVG
VGGVPGAVGVGGIPGGVGVGGIPGGVGVGGIPGGLGVSTGAVVPQVGAGVGAGGKPGKVPGVGLPGVYPG
GVLPGTGARFPGVGVLPGVPTGTGVKAKAPGGGGAFAGIPGVGPFGGQQPGVPLGYPIKAPKLPGGYGLP
YTNGKLPYGVAGAGGKAGYPTGTGVGSQAAAAAAKAAKYGAGGAGVLPGVGGGGIPGGAGAIPGIGGIAG
AGTPAAAAAAKAAAKAAKYGAAGGLVPGGPGVRVPGVGIPGVGIPGVGGIPGVGGIPGVGGIPGVGGIPG
VGGPGIGGPGIVGGPGAVSPAAAAKAAAKAAKYGARGGVGIPTYGVGAGGFPGYGVGAGAGLGGASQAAA
VAAKAAKYGAGGAGTLGGLVPGGGIAAIPGVPGTGGVPGAGTPAAAAAAAAAKAAAKAGQYGLGPGVGGV
PGGVGVGGVPGGVGVGGVPGGVGPGGVTGIGTGPGIGLVPGGIGGAGTPAAAKSAAKAAAKAQYRAAAGL
GAGVPGLGAGAGVPGFGAGAGVPGFGAGAGVPGFGAGAGVPGFGAGAVPGSLAASKAAKYGAAGAGGLGG
AGGLGGAGGLGGAGGLGGAGGLGGPGGLGGAGVPGGVAGAAPAAAAAAAAKAAAKAAQYGAGGLGAGGLG
AGGLGAGGLGAGGLGAGGLGAGGLGAGGAIPGAAGVGGVSPAAAAKAAKYGAAGLGGVLGARPFPGGGVA
ARPGFGLSPIYPGGGAGGLGVGGKPPKPYGGALGALGYQGGGCFGKSCGRKRK'''

#>XP_045642141.1 elastin isoform X6 [Ursus americanus]
elastin2 = '''MAGLRAAALRPGVLLLLLSITHPSQPGGVPGAVPGGVPGGVFYPGAGLGGLGGGALGPGGKPPKPGAGLL
GAFGPGLGAFPAGTFPGALVPGGAAGAAAAYKAAKAGAGLGGVGGVGGVGGIGGVGGLGVSTGAVVPQAG
AGVGVGAGAKPGKVPGVGLPGVYPGGVLPGTGARFPGVGVLPGVPTGTGVKAKTPGGGGAFAGIPGVGPF
GGQQPGVPLGYPIKAPKLPGGYGLPYSTGKLPFGYGPGGVAGAGGKAGYPTGTGVGSQAAAAAAAAKAAK
YGAGGAGVLPGVGGGGIPGAIPGIGGIAGAGAPAAAAKAAAKAAKYGAAGGLVPGGPGFGPGVIGVPGVG
VPGAVSPAAAAKAAAKAAKYGARAGVGVGGIPTYGVGAGGFPGYGIGAGAVPGAALSPAAQAAAAAQAAA
AAKAAKFGAGGAGALGGLVPGVGDGVAGVPGTGVVPGAGIPAAAAAKAAAKAAQFGLGPGIGVGPGVGPG
VGPGIGPGIGIVPGAVTGVGAPAAAKAAAKAAAKAQFRAAAGLPAGVPGLGVGAGVPGFGVGAGVPGFGA
GAVPGTLAAAKAAKYGAGGVGALGGVGVPGGVAGVGPDASAAAAKAAAKAAQFGLGGAGALGAGGLGVGG
LGAAGAIPGVGGFGGVSPAAAAKAAKFGVAARPGFGLSPIFPGAGAGGLGIGGKPPKPYGGALGALGFQG
GACLGKSCGRKRK'''

#>XP_029409538.1 elastin isoform X4 [Nannospalax galili]
elastin3 = '''MAGLTAAIPQPSILLISLLNLLHPAQPGGVPGAVPGGVPGGVYYPGAAGLGGLGAGLGAGGKPPKPGAGL
LGAFGGPGGLAGAGLGAGLGAYPVVPGGAAGAAAAYKAAAKAGTGLGVGGIPGGVGVGGIGGVGGLGVST
GAVVPQVGAGVGVGAGGKPGKVPGVGLPGVYPGGVLPGTGTRFPGVGVLPGVPTGTGVKPKAPGAGGAFA
GIPGVGPFGGQQPGVPLGYPIKAPKLPGGYGLPYTNGKLPYGVAGAGGKAGYPTGTGVGSQAAAAAAKAA
KYGAGGAGVLPGVGGGGIPGGAGAVPGIGGIAGPGTPAAAAAAAAAAAAAAKAAKYGAPGGLVPGGPGVR
VPGVGIPGVGGLPGVGGLPGVGVPGVAGPGIVGGPAAGQAAAAAKAAKYGAGALGGLVPGVVPGAIPGVP
GTGGVPGAGTPAAAAAAAAAKAAAKAGQYGLGPGVGQVPGGVVPGGIVPGIGVDPATGIVPGGIIGAGTP
AAAKSAAKAAAKAQYRAAAGLGAGVPGFGVGAGVPGYGVGAGVPGFGAGAVPGSLAAAKAAKYGAGGLGV
PGGLGGVGVPGGVAGAAPAAAKAAAKAAAKAAQYGGVGVGGLGAGGLGAGVIPGATGLGGVSPAAAAKAA
KYGAAGLGGVLGAARPFLGGGVADRPGFGLSPIYPGGGAGGLGVGGKPPKSYGGALGALGYQGAGCFGKS
CGRKRK'''

#>XP_030157069.1 elastin isoform X9 [Lynx canadensis]
elastin4 = '''MAGLRTAALRPGVLLLLLSIVHPSQPGGVPGAVPGGVPGGVYYPGAGLGGLGGGALGPGGKPPKPGAGLL
GAFGPGLGAFPAGTYPGALVPGGVAGAAAAYKAAAKAGAGLGGVGGIGGVGGLGVSTGAVVPQPGAGVGV
GVGGKPGKVPGVGLPGVYPGGVLPGTGARFPGVGVLPGVPTGTGVKAKTPGGGGAFAGIPGVGPFGGQQP
GVPLGYPIKAPKLPGGYGLPYSTGKLPYGYGPGGVAGAAGKAGYPTGTGVGPQAAAAAAKAAKYGAGGAG
VLPGVGGGGIPGGAGAIPGIGGIAGAGTPAAAAAAAKAAAKAAKFGAAGGVVPGGPGFVPGVGVPGVGVP
GVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGAVSPAAAAKAAAKAAKYGARAGVGVGGIPTFGIG
AGGFPGYGVGAGVGAVPGAVPGAGLSPAAAQAAAAAQAAAAAKAAKYGAGGVGGLGGLVPGIGDGVAGVP
GVGGVPGVGTPAAAAAKAAAKAAQFGLGPGIGVAPGVAPGVAPGVAPGIGPGIGIGPGGVTGVGTPAAAK
AAAKAAAKAQYLPGSLAAAKAAKYGAAGVGALGGVGVPGGVVGAGPAASAAAAKAAQFGLGGAGALGVGG
LGAGGAIPGVGGFGGVSPAAAAKAAKYGVAARPGFGLSPIYPGGACLGKSCGRKRK'''

#>XP_042827569.1 elastin isoform X9 [Panthera tigris]
elastin5 = '''MAGLRTAALRPGVLLLLLSIVHPSQPGGVPGAVPGGVPGGVFYPGAGLGGLGGGALGPGGKPPKPGAGLL
GAFGPGLGAFPAGTYPGALVPGGVAGAAAAYKAAAKAGAGLGGVGGIGGVGGLGVSTGAVVPQPGAGVGV
GVGGKPGKVPGGGGAFAGIPGVGPFGGQQPGVPLGYPIKAPKLPGYGPGGVAGAAGKAGYPTGTGVGPQA
AAAAAKAAKFGAGAGVLPGVGGGGIPGAIPGIGGIAGAGTPAAAAAAAKAAAKAAKFGAAGAVVPGGPGF
VPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGAVSPAAAAKAAAKAAKYGARVG
VGVGGIPTFGIGAGGFPGYGVGAGVGAVPGAVPGADLSAAAAQAAAAAQAAAAAKAAKYGAGGVGGLGGL
VPGIGDGVAGVPGVGGVPGVGTPAAAAAKAAAKAAQFGLGPGIGVAPGVAPGVAPGVAPGVAPGIGPGIG
IGPGDVTGVGTPAAAKAAAKAAAKAQYRAAAGLPAGVPGFGVGAGVPGFGVGAGVPGFGVGVGVPGFGAV
PGPLAAAKAAKYGAAGVGALGGVGVPGGVVGAGPAASAAAAKAAAKAAQFGLGGAGALGVGGLGAGGAIP
GVGGFGGVSPAAAAKAAKYGVAARPGFGLSPIYPGGACLGKSCGRKRK'''

#>XP_025789923.1 elastin isoform X4 [Puma concolor]
elastin6 = '''MALPACAARALGPPLQPERRAPARTTCPRRHSRVEAELAASRPGSVAASVLAGPPRGVSRGFNSQPLLDE
PPKASSSLAGAARTSLFALLPRSRRRRMHDLRRRWDLGSLCRALLTRGLAALGHSLKHVLGAIFSKIFGP
LASVGNMDEKSNKLLLALVMLFLFAVIVLQYVCPGTECQLLRLQAFSSPMPDPYRSEDESSARFVPRYNF
SRGDLLRKVDFDIKGDDLIVFLHIQKTGGTTFGRHLVRNIQLEQPCECRVGQKKCTCHRPGKRETWLFSR
FSTGWSCGLHADWTELTSCVPAVVDGKRDARLRPSRNFHYITILRDPVSRYLSEWRHVQRGATWKASLHV
CDGRPPTSEELPSCYTGDDWSGCPLKEFMDCPYNLANNRQVRMLSDLTLVGCYNLSVMPEKQRNKVLLES
AKSNLKHMAFFGLTEFQRKTQYLFEKTFNMNFISPFTQYNTTRASSVEINEEIQKRIEGLNFLDMELYSY
AKDLFLQRYQFMRQKEHQEARQKRQEQRKFLKGRFLQTHFQSQGQSQNPSQNPSQNPNLNANQNVTQNLI
QNLTQNSSQNSSHKENRESQKQSAGQEQSDGNTSNGTNDYIGSVEKWR'''

#>XP_034807283.1 elastin isoform X13 [Pan paniscus]
elastin7 = '''MAGLTAAAPRPGVLLLLLSILHPSRPGGVPGAIPGGVPGGVFYPGAGLGALGGGALAPGVKPLKPVPGGL
VGAGLGAGLGAFPAVTFPGALVPGGVADAAAAYKAAKAGAGLGGVPGVGGLGVSAGAVVPQPGAGVKPGK
VPGVGLPGVYPGGVLPGARFPGVGVLPGVPTGAGVKPKAPGVGGAFAGIPGVGPFGGPQPGVPLGYPIKA
PKLPGGYGLPYTTGKLPYGYGPGGVAGVAGKAGYPTGTGVGPQAAAAAAAKAAAKLGAGAAGVLPGVGGA
GVPGVPGAIPGIGGIAGVGTPAAAAAAAAAAAAAAKAAKYGAAAGLVPGGPGFGPGVVGVPGAGVPGVGV
PGAGIPVVPGAGIPGAAVPGVVSPEAAAKAAAKAAKYGARPGVGVGGIPTYGVGAGGFPGFGVGVGGIPG
VAGVPSVGGVPGVGGVPGVGISPEAQAAAAAKAAKYGAAGAGVLGGLVPGAPGAVPGVPGTGGVPGVGTP
AAAAAKAAAKAAQFVGVAPGVGVAPGVGVAPGVGVAPGVGVAPGVGVAPGVGVAPGVGVAPGIGPGGVAA
AAKSAAKVAAKAQLRAAAGLGAGIPGLGVGVGVPGLGVGAGVPGLGVGAGVPGFGAVPGALAAAKAAKYG
AAVPGVLGGLGALGGVGIPGGVVGAGPAAAAAAAKAAAKAAQFGLVGAAGLGGLGVGGLGVPGVGGLAGI
PPAAAAKAAKYGAAGLGGVLGGAGQFPLGGVAARPGFGLSPIFPGGACLGKACGRKRK'''


# ### insulin

# In[93]:


#>XP_051049403.1 insulin [Phodopus roborovskii]
insulin1 = '''MALWMRLLPLLALLVLWEPNPAQAFVNQHLCGSHLVEALYLVCGERGFFYTPKSRRGAEDPQASASASASSPSTSSTGLE
HLGTTARAPPALEEAADPGPASRSSPRQFRKRIFGTSESPVLFIHRPGTSGTTKRLEYRGRVITTELQLIVQEEDPEPPS
GGPASPRAEPLAQPPTPLPRAARESSPEASCCGLWPRRSRRSQN'''

#>XP_045626752.1 insulin [Ursus americanus]
insulin2 = '''MHTLKVPLIVSPASASSPSSSSTSTRLEGLGTTARAPPTLAATANTGPTSRSSAGQFRQRDLGTSDSPVLFIHRPGTSGT
TQRLEYRGRRVTGELLEEEVDPKPQSPTTHPAEPPAQVAHQLEPQLEPQPQPKPKPARATQEPSPEVSCCGLWPRRSPRAQN'''

#>XP_008837453.1 insulin [Nannospalax galili]
insulin3 = '''MHTLKVPFIVSPASASSPSTSSTSSTRLGGLGTTARAPSALAEAANTGPAIGSSSGQFRQRVLGTSDSPVLFIHRPGASG
TAKRLEYRGRVITNELVEEEDPKPQQQGLASPQAEPPAQPESQPENQPENNPEPQQARASSPEPSCCGLWPRRSPRSQN'''

#>XP_030189722.1 insulin [Lynx canadensis]
insulin4 = '''MHTLKVPFIVSPASASSPTSSSPSTRLEGLGTTARAPPALAATANIDPTSRSSAGQFQQRALGTSDSPVLFIHRPGASGT
TQRLEYRGRRVTAELLEEEVDPKTQGPASHPAEPPAQAAPQLEPQPESQPARAAGEPSPEVSCCGLWPRRSPRTQN'''

#>XP_007092665.2 insulin [Panthera tigris]
insulin5 = '''MGLAVVLATPSPTCHLAWGAGVQMPLSPGQRGVEEQSPDPAGSPSPLTGGQGLPGATASCPVASAPLSGHKATQFGGARG
KAWRGRGASASSPTSSSPSTRLEGLGTTARAPPALAATANIGPTSGSSAGQFQQRALGTSDSPVLFIHRPGASGTTQRLE
YRGRRVTAELLEEEVDPKTQGPASHPAEPPAQAAPQLEPQPESQPARAAGEPSPEVSCCGLWPRWSPRAQN'''

#>XP_025771327.1 insulin [Puma concolor]
insulin6 = '''MHTLKVPFIVSPASASSPTSSSPSTRLEGLGTTARAPPALAATANIDPTSRSSAGQFQQRALGTSDSPVLFIHRPGASGT
TQRLEYRGRRVTAELLEEEVDPKTQGPASHPAEPPAQAAPQLEPQPESQPARAAGEPSPEVSCCGLWPRWSPRAQN'''

#>XP_034787832.1 insulin [Pan paniscus]
insulin7 = '''MGSETIKPAGTQQPSALQDRLHQKRPSSRSVPRAFASGGLRVPGWLDPRPQLCSREDVAGLLKHVGVSPGAPRQGTWPSA
GLSPACLPDHCPSAMALWMRLLPLLALLALWGPDPASAFVNQHLCGSHLVEALYLVCGERGFFYTPKTRREAEDLQVGQV
ELGGGPGAGSLQPLALEGSLQKRGIVEQCCTSICSLYQLENYCN'''


# ### plastin

# In[94]:


#>XP_051031003.1 plastin-3 [Phodopus roborovskii]
plastin1 = '''MPLPGYKVREIIQKLMLDGDRNKDGKISFNEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSE
GTQHSYSEEEKYAFVNWINKALENDPDCRHVIPMNPNTDDLFKAVGDGIVLCKMINLSVPDTIDERAINK
KKLTPFIIQENLNLALNSASAIGCHVVNIGAEDLRAGKPHLVLGLLWQIIKIGLFADIELSRNEALAALL
RDGETLEELMKLSPEELLLRWANFHLENSGWQKINNFSADIKDSKAYFHLLNQIAPKGQKEGEPRIDINM
SGFNETDDLKRAESMLQQADKLGCRQFVTPADVVSGNPKLNLAFVANLFNKYPALTKPENQDIDWTLLEG
ETREERTFRNWMNSLGVNPHVNHLYADLQDALVILQLYERIKVPVDWSKVNKPPYPKLGANMKKLENCNY
AVELGKHPAKFSLVGIGGQDLNDGNPTLTLALVWQLMRRYTLNVLEDLGEGQKANDDIIVNWVNRTLSEA
GKSTSIQSFKDKTISSSLAVVDLIDAIQPGCINYDLVKSGNLTEEDKHNNAKYAVSMARRIGARVYALPE
DLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_045656666.1 plastin-3 [Ursus americanus]
plastin2 = '''MEEMATTQISKDELDELKEAFAKVDLNSNGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDG
KISFDEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALEND
PDCRHVIPMNPNTDDLFKAVGDGIVLCKMINLSVPDTIDERAINKKKLTPFIIQENLNLALNSASAIGCH
VVNIGAEDLRAGKPHLVLGLLWQIIKIGLFADIELSRNEALAALLRDGETLEELMKLSPEELLLRWANFH
LENSGWQKINNFSADIKDSKAYFHLLNQIAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCR
QFVTPADVVSGNPKLNLAFVANLFNKYPALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLY
ADLQDALVILQLYERIKVPVDWSKVNKPPYPKLGANMKKLENCNYAVELGKHPAKFSLVGIGGQDLNDGN
QTLTLALVWQLMRRYTLNVLEDLGDGQKANDDIIVSWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLID
AIQPGCINYDLVKSGNLTEDDKHNNAKYAVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_029423452.1 plastin-3 [Nannospalax galili]
plastin3 = '''MFLNCHGLTGTQPSITKASWVRQLFNSYWKYICDSYAASNLYMDEMATTQISKDELDELKEAFAKVDLNS
NGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDGKISFNEFVYIFQEVKSSDIAKTFRKAIN
RKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALENDPDCRHVIPMNPNTDDLFKAVGDGIVLCK
MINLSVPDTIDERAINKKKLTPFIIQENLNLALNSASAIGCHVVNIGAEDLRAGKPHLVLGLLWQIIKIG
LFADIELSRNEALAALLRDGETLEELMKLSPEELLLRWANFHLENSGWQKINNFSADIKDSKAYFHLLNQ
IAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCRQFVTPADVVSGNPKLNLAFVANLFNKYP
ALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLYADLQDALVILQLYERIKVPVDWSKVNKP
PYPKLGANMKKLENCNYAVELGKHPAKFSLVGIGGQDLNDGNPTLTLALVWQLMRRYTLNVLEDLGEGQK
ANDDIIVNWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLIDAIQPGCINYDLVKSGNLTEDDKHNNAKY
AVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_030161565.1 plastin-3 [Lynx canadensis]
plastin4 = '''MDEMATTQISKDELDELKEAFAKVDLNSNGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDG
KISFDEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALEND
PDCRHVIPMNPNTDDLFKAVGDGIVLCKMINLSVPDTIDERAINKKKLTPFIIQENLNLALNSASAIGCH
VVNIGAEDLRAGKPHLVLGLLWQIIKIGLFADIELSRNEALAALLRDGETLEELMKLSPEELLLRWANFH
LENSGWQKINNFSADIKDSKAYFHLLNQIAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCR
QFVTPADVVSGNPKLNLAFVANLFNKYPALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLY
ADLQDALVILQLYERIKVPVDWSKVNKPPYPKLGANMKKLENCNYAVELGKHPAKFSLVGIGGQDLNDGN
QTLTLALVWQLMRRYTLNVLEDLGDGQKANDDIIVSWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLID
AIQPGCINYDLVKSGNLTEDDKHNNAKYAVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_042829962.1 plastin-3 [Panthera tigris]
plastin5 = '''MDEMATTQISKDELDELKEAFAKVDLNSNGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDG
KISFDEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALEND
PDCRHVIPMNPNTDDLFKAVGDGIVLCKMINLSVPDTIDERAINKKKLTPFIIQENLNLALNSASAIGCH
VVNIGAEDLRAGKPHLVLGLLWQIIKIGLFADIELSRNEALAALLRDGETLEELMKLSPEELLLRWANFH
LENSGWQKINNFSADIKDSKAYFHLLNQIAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCR
QFVTPADVVSGNPKLNLAFVANLFNKYPALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLY
ADLQDALVILQLYERIKVPVDWSKVNKPPYPKLGANMKKLENCNYAVELGKHPAKFSLVGIGGQDLNDGN
QTLTLALVWQLMRRYTLNVLEDLGDGQKANDDIIVSWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLID
AIQPGCINYDLVKSGNLTEDDKHNNAKYAVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_025789552.1 plastin-3 [Puma concolor]
plastin6 = '''MDEMAATQISKDELDELKEAFAKVDLNSNGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDG
KISFDEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALEND
PDCRHVIPMNPNTDDLFKAVGDGIVLWAINKKNHASSSFRVRLVFLFSSGNCHVRPPFVDHDFNSFNKTN
TTVKVASSERNYICSNIALAALLRDGETLEELMKLSPEELLLRWANFHLENSGWQKINNFSADIKLIDFS
NSVKDSKAYFHLLNQIAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCRQFVTPADVVSGNP
KLNLAFVANLFNKYPALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLYAYTLNVLEDLGDG
QKANDDIIVSWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLIDAIQPGCINYDLVKSGNLTEDDKHNNA
KYAVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''

#>XP_003805460.1 plastin-3 isoform X2 [Pan paniscus]
plastin7 = '''MDEMATTQISKDELDELKEAFAKVDLNSNGFICDYELHELFKEANMPLPGYKVREIIQKLMLDGDRNKDG
KISFDEFVYIFQEVKSSDIAKTFRKAINRKEGICALGGTSELSSEGTQHSYSEEEKYAFVNWINKALEND
PDCRHVIPMNPNTDDLFKAVGDGIVLCKMINLSVPDTIDERAINKKKLTPFIIQENLNLALNSASAIGCH
VVNIGAEDLRAGKPHLVLGLLWQIIKIGLFADIELSRNEALAALLRDGETLEELMKLSPEELLLRWANFH
LENSGWQKINNFSADIKDSKAYFHLLNQIAPKGQKEGEPRIDINMSGFNETDDLKRAESMLQQADKLGCR
QFVTPADVVSGNPKLNLAFVANLFNKYPALTKPENQDIDWTLLEGETREERTFRNWMNSLGVNPHVNHLY
ADLQDALVILQLYERIKVPVDWSKVNKPPYPKLGANMKKLENCNYAVELGKHPAKFSLVGIGGQDLNDGN
QTLTLALVWQLMRRYTLNVLEDLGDGQKANDDIIVNWVNRTLSEAGKSTSIQSFKDKTISSSLAVVDLID
AIQPGCINYDLVKSGNLTEDDKHNNAKYAVSMARRIGARVYALPEDLVEVKPKMVMTVFACLMGRGMKRV'''


# ### prolactin

# In[95]:


#>XP_051050055.1 prolactin [Phodopus roborovskii]
prolactin1 = '''MNSQGSDRKAGTLLLLVMSNLMFCRSVHPLPICPGGNCQMPLQELFDRVIMLSHYIYMLSADMFIELDKQ
YAQDHEFIAKAISDCPTSSLATPEGKEEAQQVPPEVLLNLILSLVHSWNDPLFQLVTEVDGIHEASDAII
SRAKEIGEQNKRLLEGIEKILGQAYPEAKGNEVYSVWSQFPSLQGVDEESRDLAIYNKIRCLRRDSHKVD
NYLKLLRCRIVHNNNC'''

#>XP_045651702.1 prolactin [Ursus americanus]
prolactin2 = '''MDKKGWSLKGSLLPLLLLVSDLLLCQSVASLPICPTGAVNCQVSLRDLFDRAVILSHYIHNLSSEMFNEF
DKRYAQGRGFITKAINSCHTSSLSTPEDKEQAQQIHHEDLLNLILRVLRSWNDPLYHLVTEVRGMQEAPD
SILSRAIEIEEQNRRLLEGMEKIVGQVHPGVRENEVYSVWSGLPSLQMADEDTRLFAFYNLLHCLRRDSH
KIDNYLKLLKCRIVYDSNC'''

#>XP_008852937.1 prolactin [Nannospalax galili]
prolactin3 ='''MISVMNSQGSAQKAGTLLLLVVSNLLFCQNVHPLPICPSGDCKMSLQDMFDRLVMLSHYIHSLSSEIFIE
FDQRYAQGRGFIAKAINGCHTSSLPTPEDKEQAQQIPPEVLLKLVISLLHAWNDPLYQLVTEVGGIHEAP
DGMVSRAKEIEAQIKQLLEGIQKIIGQVHPGANENEIYSVWAQLPSLQAADEESRLFAFYNLLHCLRRDS
HKVDNYLKILKCRIVYQNNC'''

#>XP_030170606.1 prolactin [Lynx canadensis]
prolactin4 ='''MDNKGWSLKGSLLFLLLLLSDLLLCKSVASLPICPSGAVNCQVSLRDLFDRAVILSHYIHNLSSEMFNEF
DKRYAQGRGFITKAINSCHTSSLPTPEDKEQAQQIHHEDLLNVILRVLRSWNDPLYHLVTEVRGLHEAPD
AILSRAIEIEEQNRRLLEGMEKIVHQVHPGVRENEVYSVWSGLPSLQMADEDSRLFAFYNLLHCLRRDSH
KIDSYLKLLKCRIVYDSNC'''

#>XP_007074595.2 prolactin [Panthera tigris]
prolactin5 ='''MDNKGWSLKGSLLFLLLLLSDLLLCKSVASLPICPSGAVNCQVSLRDLFDRAVILSHYIHNLSSEMFNEF
DKRYAQGRGFITKAINSCHTSSLSTPEDKEQAQQIHHEDLLNVILRVLRSWNDPLYHLVTEVRGLHEAPD
AILSRAIEIEEQNRRLLEGMEKIVHQVHPGVRENEVYSVWSGLPSLQMADEDSRLFAFYNLLHCLRRDSH
KIDSYLKLLKCRIVYDSNC'''

#>XP_025772922.1 prolactin [Puma concolor]
prolactin6 ='''MDPFQNMKKHSVWEPGHLQSGRWFPEDGASNGKPKRTSIGRRDTGQFQAPEGALTGKTFAGPLLDLFLSR
SHLHLLSKTYCQLNKKFSGHTYEYGRQEEIKPGRQARDLELRAGTLYVLDPTLKRVKIADSLVSTVDCIR
YHQDKRYAQGRGFITKAINSCHTSSLPTPEDKEQAQQIHHEDLLNVILRVLRSWNDPLYHLVTEVRGLHE
APDAILSRAIEIEEQNRRLLEGMEKIVHQVHPGVRENEVYSVWSGLPSLQMADEDSRLFAFYNLLHCLRR
DSHKIDSYLKLLKCRIVYDSNC'''

#>XP_008975038.1 prolactin [Pan paniscus]
prolactin7 ='''MNIKGSPWKGSLLLLLVSNLLLCHSVAPLPICPGGAARCQVTLGDLFDRAVVLSHYIHNLSSEMFSEFDK
RYTHGRGFITKAINSCHTSSLATPEDKEQAQQINQKDFLSLIVSILRSWNEPLYHLVTEVRGMQEAPEAI
LSKAVEIEEQTKRLLEGMELIVSQVHPETKENEIYPVWSGLPSLQMADEESRLSAYYNLLHCLRRDSHKI
DNYLKLLKCRIIHNNNC'''


# ### vitamin D binding protein

# In[101]:


#>XP_051054365.1 vitamin D-binding protein [Phodopus roborovskii]
vitamin_D_binding_protein1 = '''MRGGATGLPGHNMKRVLVLLLALALGHALERGREYEKDKVCKEFTMLGKDDFRSLSLILYSRKFPSGTFE
QVKQLVKEIVALTEECCAEGADPNCYDTRTSELATKSCKRDAPFPEHPGTLVCCKEKGLSRKLCMADLDH
HPKEIPTYVEPTNDEICEAFRKDPKGFADQFLYEYATSYGQAPLSLLVAYTKSYLSMVGSCCTSASPTVC
FLKERLQIKHLSLLTTMSNRVCLQYTVYEKEKSRLSHLIKLAQKVPTANLEDVRPLVEDLTQILSRCCTS
TSEDCMAKELPEHTLKICDNLSTKNSKFQECCQEKAPMDIFMCIHFLPAAEPLQLPAIKLPTETDLCGQS
TSQAMDQYAFELSRRTQVPEVFFTSVLLSILKSLGRCCHAQDSSACFSTKSPILKKELTSFIELGQEMCA
DYSDNTFTEYKKKLAERLMTKTPNTSPGKLKDMVDKYSDFASKCCSINSPPAYCNTMIYYEMEKIHRTDP
MHTTILDQEELDYPGK'''

#>XP_045645281.1 vitamin D-binding protein [Ursus americanus]
vitamin_D_binding_protein2 = '''MSSQSGILVKGNWLLWAATLYRVTYRRRGAAELAGREMKRTLVLLLAVAFVHALERGRDYEKDKVCKELA
NLGKEDFTSLSMVLYSRKFPSSTFEQISHLVNEVVSLTEACCAEGADPECYDLRTSALSARSCEKDAPFP
VHPGTAECCTREGLERKLCMAALKHQPQEFPTYVEPTNDEICEAFRKDPKDFAEQFMYEYSINYGQAPLS
LLVSYTKSYLSMVGSCCTSPSPTVCFLKERLQMKHLSLLTTMSNRICSQYAAYGKEKSRLSHLIKLAQKV
PTAELEDVLPLAEEINTILSKCCESPSEDCMAKELPEYTVKICDNLSTKNSKFKDCCQEKTPMDVFVCTY
FMPAAPTPELPAAELPTSTDACEKGNTKAIDQYTFELSRRTHLPEVFLSKILEPTLKSLSECCDSEDSTG
CMNAQGPQLKKELSSFIDKGQKLCADYSENTFTEYKKKLAERLRAQLPDASSMDLQGLIDRRSDFASKCC
SINAPPLYCDSEIDVEMKNML'''

#>XP_008827473.1 vitamin D-binding protein [Nannospalax galili]
vitamin_D_binding_protein3 = '''MKRILVLLLALALGHALERGRDYEKDKVCKELAFLGNDDFRSLSLILYSRKFSSGTFEQVSQLVNEVVSL
TEDCCAEGADPTCYDTRTSALSVKSCESDSPFPVHPGTPECCTKEGLERKLCMAALKHQPREFPTYVEPA
NDEICEAFRKDPKGFANQFLYEYSSNYGQAPMPLLVGYTRSYLSMVGSCCTSASPTACFLKERLQIKHLS
LLTTLSNRVCSQYAAYGKEKSRLSHLIKLAQKAPTADLKNIVPLAEDITEILSRCCESTSEDCMSKELPE
HTIKICDNLSTKNSKFEECCQEKTPMDIFMCTYFMPAAQPLQLPAIKFPTNKDLCGQSGSKAVDQYTFEL
SRRTHIPEVFLSKVLETTLKTLSECCDSQDSPACFNTKGPLLKKELTSFIEKGQEMCADYSENTFTEYKK
KLAERLKTKMSDSSPLELAGLVDKYSDFASKCCSINSPPLYCDTQIEAEMKNILQS'''

#>XP_030170350.1 vitamin D-binding protein [Lynx canadensis]
vitamin_D_binding_protein4 = '''MLRNVDGSFSSQGCPSMEESCRLHEAKKENGKALLDRKAMPSDSLKGKGKVEMKDQRLIIDWFIVRNLSK
RELVTLGRHFYWVTYRRRGAAELTSRKMKRILVLLLAVAFVRALERGRDYEKDKVCKELANLGKDDFTSL
SMVSYSRKFPSSTFEQISHLVNEVVSLTEACCAEGADPDCYDLRTSALSAKSCESDSPFPVHPGTAECCT
KEGLEQKLCMAALKHQPQEFPTYVEPTNDEICEAFRKDPKDFAEQFMYEYSINYGQAPLPLLVGYTKSYL
SMVGSCCTSPSPTVCFLKERLQMKHLSLLTTMSNRVCSQYAAYGKEKSRLSHLVKLAQKVPTADLEDVLP
LAEEITTILSKCCESTSEDCMAKELPEYTVKICDNLATKNSKFKDCCQEKTPMDVFMCAYFMPAAPTPEL
PAVELPTGQDVCDKGNTKAIDQYIFELSRRTPLPEVFLSKILEPTLKSLAECCESEDSAACINTQGPQLK
KELSSFIDKGQKLCADYSENTFTEFKKKLAERLRAKLPDVSALELQGLIDKRSDFASKCCSINSPPLYCD
LEIEAEMKNTL'''

#>XP_042840709.1 vitamin D-binding protein [Panthera tigris]
vitamin_D_binding_protein5 = '''MAKRLIIDWFIVRKLSKRELVTLGCHFYWVTYRRRGAAELTSRKMKRILVLLLAVAFVHALERGRDYEKD
KVCKELANLGKDDFTSLSMVSYSRKFPSSTFEQISHLVNEVVSLTEACCAEGADPDCYDLRTSALSAKSC
ETDSPFPVHPGTAECCTKEGLEQKLCMAALKHQPQEFPTYVEPSNDEICEAFRKDPKDFAEQFMYEYSIN
YGQAPLPLLVGYTKSYLSMVGSCCTSPSPTVCFLKERLQMKHLSLLTTMSNRVCSQYAAYGKEKSRLSHL
VKLAQKVPTADLEDVLPLAEEITTILSKCCESTSEDCMAKELPEYTVKICDNLATKNSKFKDCCQEKTPM
DVFMCAYFMPAAPTPELPAVELPTGQDVCDKGNTKAIDQYIFELSRRTPLPEVFLSKILEPTLKSLAECC
ESEDSAACINTQGPQLKKELSSFIDKGQKLCADYSENTFTEFKKKLAERLRAKLPDVSALELQGLIDKRS
DFASKCCSINSPPLYCDLEIEAEMKNTL'''

#>XP_025777930.1 vitamin D-binding protein [Puma concolor]
vitamin_D_binding_protein6 = '''MYRRRGAAELTSRKMKRILVLLLAVAFVHALERGRDYEKDKVCKELANLGKDDFTSLSMVSYSRKFPSST
FEQISHLVNEVVSLTEACCAEGADPDCYDLRTSALSAKSCESDSPFPVHPGTAECCTKEGLEQKLCMAAL
KHQPQEFPTYVEPTNDEICEAFRKDPKDFAEQFMYEYSINYGQAPLPLLVGYTKSYLSMVGSCCTSPSPT
VCFLKERLQMKHLSLLTTMSNRVCSQYAAYGKEKSRLSHLVKLAQKVPTADLEDVLPLAEEITTILSKCC
ESTSEDCMAKELPEYTVKICDNLATKNSKFKDCCQEKTPMDVFMCAYFMPAAPTPELPAVELPTGQDVCD
KGNTKAIDQYIFELSRRTPLPEVFLSKILEPTLKSLAECCESEDSAACINTQGPQLKKELSSFIDKGQKL
CADYSENTFTEFKKKLAERLRAKLPDVSALELQGLIDKRSDFASKCCSINSPPLYCDLEIEAEMKNTL'''

#>XP_008969902.2 vitamin D-binding protein [Pan paniscus]
vitamin_D_binding_protein7 = '''MKRVLVLLLAVAFGHALERGRDYEKNKVCKEFSHLGKEDFTSLSLVLYSRKFPSGTFEQVSQLVKEVVSL
TEACCAEGADPDCYDTRTSALSAKSCESNSPFPVHPGTAECCTKEGLERKLCMAALKHQPQEFPTYVEPT
NDEICEAFRKDPKEYANQFMWEYSTNYGQAPLSLLVSYTKSYLSMVGSCCTSASPTVCFLKERLQLKHLS
LLTTLSNRVCSQYAAYGEKKSRLSNLIKLAQKVPTADLEDVLPLAEDITNILSKCCESASEDCMAKELPE
HTVKLCDNLSTKNSKFQDCCQEKTAMDVFVCTYFMPAAQLPELPDVELPTNKDVCDPGNTKVMDKYTFEL
SRRTHLPEVFLSKVLEPTLKSLGECCDVEDSTTCFNAKGPLLKKELSSFIGKGQELCADYSENTFTEYKK
KLAERLKAKLPDATPTELAKLVNKRSDFASNCCSINSPPLYCDSEIDAELKNIL'''


# # Data Preprocessing

# In[96]:


def encode(aa):
    # Dictionary mapping amino acids to numerical values
    aa_dict = {
        'A': 1,
        'C': 2,
        'D': 3,
        'E': 4,
        'F': 5,
        'G': 6,
        'H': 7,
        'I': 8,
        'K': 9,
        'L': 10,
        'M': 11,
        'N': 12,
        'P': 13,
        'Q': 14,
        'R': 15,
        'S': 16,
        'T': 17,
        'V': 18,
        'W': 19,
        'Y': 20,
    }
    # Return the numerical value for the amino acid as an integer
     # If the character is not an amino acid, return 0
    if aa not in aa_dict:
        return 0
    # Return the numerical value for the amino acid
    return int(aa_dict[aa])


# In[102]:


# Encode the sequences
encoded_seq1 = [encode(aa) for aa in afamin1]
encoded_seq2 = [encode(aa) for aa in afamin2]
encoded_seq3 = [encode(aa) for aa in afamin3]
encoded_seq4 = [encode(aa) for aa in afamin4]
encoded_seq5 = [encode(aa) for aa in afamin5]
encoded_seq6 = [encode(aa) for aa in afamin6]
encoded_seq7 = [encode(aa) for aa in afamin7]

encoded_seq8 = [encode(aa) for aa in albumin1]
encoded_seq9 = [encode(aa) for aa in albumin2]
encoded_seq10 = [encode(aa) for aa in albumin3]
encoded_seq11 = [encode(aa) for aa in albumin4]
encoded_seq12 = [encode(aa) for aa in albumin5]
encoded_seq13 = [encode(aa) for aa in albumin6]
encoded_seq14 = [encode(aa) for aa in albumin7]

encoded_seq15 = [encode(aa) for aa in alpha_fetoprotein1]
encoded_seq16 = [encode(aa) for aa in alpha_fetoprotein2]
encoded_seq17 = [encode(aa) for aa in alpha_fetoprotein3]
encoded_seq18 = [encode(aa) for aa in alpha_fetoprotein4]
encoded_seq19 = [encode(aa) for aa in alpha_fetoprotein5]
encoded_seq20 = [encode(aa) for aa in alpha_fetoprotein6]
encoded_seq21 = [encode(aa) for aa in alpha_fetoprotein7]

encoded_seq22 = [encode(aa) for aa in elastin1]
encoded_seq23 = [encode(aa) for aa in elastin2]
encoded_seq24 = [encode(aa) for aa in elastin3]
encoded_seq25 = [encode(aa) for aa in elastin4]
encoded_seq26 = [encode(aa) for aa in elastin5]
encoded_seq27 = [encode(aa) for aa in elastin6]
encoded_seq28 = [encode(aa) for aa in elastin7]

encoded_seq29 = [encode(aa) for aa in insulin1]
encoded_seq30 = [encode(aa) for aa in insulin2]
encoded_seq31 = [encode(aa) for aa in insulin3]
encoded_seq32 = [encode(aa) for aa in insulin4]
encoded_seq33 = [encode(aa) for aa in insulin5]
encoded_seq34 = [encode(aa) for aa in insulin6]
encoded_seq35 = [encode(aa) for aa in insulin7]

encoded_seq36 = [encode(aa) for aa in plastin1]
encoded_seq37 = [encode(aa) for aa in plastin2]
encoded_seq38 = [encode(aa) for aa in plastin3]
encoded_seq39 = [encode(aa) for aa in plastin4]
encoded_seq40 = [encode(aa) for aa in plastin5]
encoded_seq41 = [encode(aa) for aa in plastin6]
encoded_seq42 = [encode(aa) for aa in plastin7]

encoded_seq43 = [encode(aa) for aa in prolactin1]
encoded_seq44 = [encode(aa) for aa in prolactin2]
encoded_seq45 = [encode(aa) for aa in prolactin3]
encoded_seq46 = [encode(aa) for aa in prolactin4]
encoded_seq47 = [encode(aa) for aa in prolactin5]
encoded_seq48 = [encode(aa) for aa in prolactin6]
encoded_seq49 = [encode(aa) for aa in prolactin7]

encoded_seq50 = [encode(aa) for aa in vitamin_D_binding_protein1]
encoded_seq51 = [encode(aa) for aa in vitamin_D_binding_protein2]
encoded_seq52 = [encode(aa) for aa in vitamin_D_binding_protein3]
encoded_seq53 = [encode(aa) for aa in vitamin_D_binding_protein4]
encoded_seq54 = [encode(aa) for aa in vitamin_D_binding_protein5]
encoded_seq55 = [encode(aa) for aa in vitamin_D_binding_protein6]
encoded_seq56 = [encode(aa) for aa in vitamin_D_binding_protein7]


# In[104]:


encoded_sequences = [encoded_seq1, encoded_seq2, encoded_seq3, encoded_seq4, encoded_seq5, encoded_seq6, encoded_seq7,
                     encoded_seq8, encoded_seq9, encoded_seq10, encoded_seq11, encoded_seq12, encoded_seq13, encoded_seq14,
                     encoded_seq15, encoded_seq16, encoded_seq17, encoded_seq18, encoded_seq19, encoded_seq20, encoded_seq21,
                     encoded_seq22, encoded_seq23, encoded_seq24, encoded_seq25, encoded_seq26, encoded_seq27, encoded_seq28,
                     encoded_seq29, encoded_seq30, encoded_seq31, encoded_seq32, encoded_seq33, encoded_seq34, encoded_seq35, 
                     encoded_seq36,encoded_seq37, encoded_seq38, encoded_seq39, encoded_seq40, encoded_seq41, encoded_seq42, 
                     encoded_seq43,encoded_seq44, encoded_seq45, encoded_seq46, encoded_seq47, encoded_seq48, encoded_seq49,
                     encoded_seq50, encoded_seq51, encoded_seq52, encoded_seq53, encoded_seq54, encoded_seq55, encoded_seq56
                    ]


# In[105]:


# Find the length of the longest sequence
max_length = max(len(seq) for seq in encoded_sequences)

# Pad the shorter sequences with zeros
padded_sequences = []
for seq in encoded_sequences:
    padded_seq = seq + [0] * (max_length - len(seq))
    padded_sequences.append(padded_seq)

# Convert the padded_sequences list to a numpy array
encoded_sequences_array = np.array(padded_sequences)


# In[106]:


encoded_sequences_array


# # Clustering

# In[144]:


import matplotlib.pyplot as plt
plt.style.use("fivethirtyeight")

import warnings
warnings.filterwarnings("ignore")


# ### K-Mean Clustering Technique

# In[ ]:





# In[145]:


kmeans_model = KMeans(n_clusters=8)

# Convert sequences to numerical vectors using a sequence encoding method
X = encoded_sequences_array

kmeans_model.fit_predict(X)

# Access the centroids
centroids = kmeans_model.cluster_centers_

# Access the clusters
clusters = kmeans_model.labels_
clusters 


# In[128]:


import seaborn as sns


# In[129]:


# Access the centroids
centroids = kmeans_model.cluster_centers_

# Access the clusters
clusters = kmeans_model.labels_


# In[130]:


sns.scatterplot(encoded_sequences_array[:, 0],
             encoded_sequences_array[:, 1], 
            
            c=kmeans_model.labels_)
plt.show()


# In[131]:


sns.countplot(kmeans_model.labels_)


# In[132]:


from sklearn.manifold import TSNE


# In[133]:


tsne = TSNE(n_components=2)


# In[134]:


X_reduced = tsne.fit_transform(encoded_sequences_array)


# In[135]:


plt.scatter(X_reduced[:, 0], X_reduced[:, 1], c=kmeans_model.labels_)
plt.show()


# ### Hierarchical Clustering Technique

# In[136]:


from scipy.cluster.hierarchy import linkage, dendrogram
import matplotlib.pyplot as plt

# Convert sequences to numerical vectors using a sequence encoding method
X = encoded_sequences_array

# Apply hierarchical clustering to the numerical vectors
linkage_matrix = linkage(X, 'ward')

# Visualize the clusters using a dendrogram
plt.figure(figsize=(10, 7))
dendrogram(linkage_matrix, p=7, truncate_mode='level')
plt.show()


# ### DBSCAN Clustering Technique

# In[138]:


from sklearn.cluster import DBSCAN
import matplotlib.pyplot as plt


# Apply DBSCAN clustering to the numerical vectors
dbscan = DBSCAN()
clusters = dbscan.fit_predict(X)

# Visualize the clusters
plt.scatter(X[:, 0], X[:, 1], c=clusters)
plt.show()


# ### KModel Technique

# In[141]:


from kmodes.kmodes import KModes
import matplotlib.pyplot as plt


# Apply KModes clustering to the numerical vectors
kmodes = KModes(n_clusters=7, init='Huang', n_init=5, verbose=1)
clusters = kmodes.fit_predict(X)

# Visualize the clusters
plt.scatter(X[:, 0], X[:, 1], c=clusters)
plt.show()


#  # Phylogenetics

# In[158]:


# Import the necessary modules
from Bio.Phylo import Phylo, draw
from Bio.Seq import Seq, SeqRecord
from Bio.Phylo.TreeConstruction import distance, upgma


# Create a SeqRecord object for each sequence
seq_records = [SeqRecord(Seq(afamin), id="seq1"), 
               SeqRecord(Seq(albumin), id="seq2"),
               SeqRecord(Seq(alpha_fetoprotein), id="seq3"),
               SeqRecord(Seq(elastin), id="seq4")
               SeqRecord(Seq(insulin), id="seq5"),
               SeqRecord(Seq(plastin), id="seq6"),
               SeqRecord(Seq(prolactin), id="seq7"),
               SeqRecord(Seq(vitamin_D_binding_protein), id="seq8"),    
              ]

# Create a distance matrix
distance_matrix = distance.matrix(seq_records, distance.hamming)

# Construct a tree
tree = upgma(distance_matrix)

# Visualize the tree
Phylo.draw(tree)


# ### Use this module to build trees in three different ways:

# #### Separate tree for each "group" of protein

# In[159]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma

# Create a dictionary to store the trees
trees = {}

# Iterate through the sequences
for seq in sequences:
    # Get the protein group
    group = seq.description.split("|")[1]

    # If the group is not in the dictionary, create a new tree
    if group not in trees:
        # Create a distance matrix
        distance_matrix = distance.matrix(sequences, distance.hamming)
        # Construct a tree
        tree = upgma(distance_matrix)
        # Add the tree to the dictionary
        trees[group] = tree

# Visualize the trees
for group, tree in trees.items():
    Phylo.draw(tree)


# #### Separate tree for each cluster

# In[ ]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma
from sklearn.cluster import KMeans


# Create a list of sequences
X = []
for seq in sequences:
    X.append(seq.seq)

# Cluster the sequences using KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(X)

# Get the cluster labels
cluster_labels = kmeans.labels_

# Create a dictionary to store the trees
trees = {}

# Iterate through the sequences
for i, seq in enumerate(sequences):
    # Get the cluster label
    label = cluster_labels[i]

    # If the label is not in the dictionary, create a new tree
    if label not in trees:
        # Get the sequences in the same cluster
        cluster_sequences = [seq for j, seq in enumerate(sequences) if cluster_labels[j] == label]
        # Create a distance matrix
        distance_matrix = distance.matrix(cluster_sequences, distance.hamming)
        # Construct a tree
        tree = upgma(distance_matrix)
        # Add the tree to the dictionary
        trees[label] = tree

# Visualize the trees
for label, tree in trees.items():
    Phylo.draw(tree)


# #### One common tree for all downloaded sequences

# In[ ]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma


# Create a distance matrix
distance_matrix = distance.matrix(sequences, distance.hamming)

# Construct a tree
tree = upgma(distance_matrix)

# Visualize the tree
Phylo.draw(tree)


# ### Create consensus trees from your two approaches (clusters vs the groups of proteins downloaded together).

# In[161]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma, bootstrap
from sklearn.cluster import KMeans


# Create a list of sequences
X = []
for seq in sequences:
    X.append(seq.seq)

# Cluster the sequences using KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(X)

# Get the cluster labels
cluster_labels = kmeans.labels_

# Create a dictionary to store the trees
trees = {}

# Iterate through the sequences
for i, seq in enumerate(sequences):
    # Get the cluster label
    label = cluster_labels[i]

    # If the label is not in the dictionary, create a new tree
    if label not in trees:
        # Get the sequences in the same cluster
        cluster_sequences = [seq for j, seq in enumerate(sequences) if cluster_labels[j] == label]
        # Create a distance matrix
        distance_matrix = distance.matrix(cluster_sequences, distance.hamming)
        # Construct a tree
        tree = upgma(distance_matrix)
        # Add the tree to the dictionary
        trees[label] = tree

# Create a list of trees
tree_list = [tree for label, tree in trees.items()]

# Create a consensus tree using the bootstrap function
consensus_tree = bootstrap(tree_list, 1000)

# Visualize the consensus tree
Phylo.draw(consensus_tree)


# ### Create different visualizations (from two consensus trees and one tree from all sequences) in order to compare the results and draw some conclusions:

# #### Color tree branches based on the organism

# In[ ]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma, bootstrap
from sklearn.cluster import KMeans

# Create a list of sequences
X = []
for seq in sequences:
    X.append(seq.seq)

# Cluster the sequences using KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(X)

# Get the cluster labels
cluster_labels = kmeans.labels_

# Create a dictionary to store the trees
trees = {}

# Iterate through the sequences
for i, seq in enumerate(sequences):
    # Get the cluster label
    label = cluster_labels[i]

    # If the label is not in the dictionary, create a new tree
    if label not in trees:
        # Get the sequences in the same cluster
        cluster_sequences = [seq for j, seq in enumerate(sequences) if cluster_labels[j] == label]
        # Create a distance matrix
        distance_matrix = distance.matrix(cluster_sequences, distance.hamming)
        # Construct a tree
        tree = upgma(distance_matrix)
        # Add the tree to the dictionary
        trees[label] = tree

# Create a list of trees
tree_list = [tree for label, tree in trees.items()]

# Create a consensus tree using the bootstrap function
consensus_tree = bootstrap(tree_list, 1000)

# Color tree branches based on the organism
for clade in consensus_tree.find_clades():
    if "Homo sapiens" in clade.name:
        for clade in consensus_tree.find_clades():
    if "Insulin" in clade.name:
        clade.color = "red"
    elif "plastin" in clade.name:
        clade.color = "blue"
    elif "albumin" in clade.name:
        clade.color = "green"
    elif "alpha-fetoprotein" in clade.name:
        clade.color = "yellow"


# #### Color tree branches based on the protein "group"

# In[ ]:


# Import the necessary modules
from Bio import SeqIO
from Bio.Phylo import Phylo, draw
from Bio.Phylo.TreeConstruction import distance, upgma, bootstrap
from sklearn.cluster import KMeans


# Create a list of sequences
X = []
for seq in sequences:
    X.append(seq.seq)

# Cluster the sequences using KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(X)

# Get the cluster labels
cluster_labels = kmeans.labels_

# Create a dictionary to store the trees
trees = {}

# Iterate through the sequences
for i, seq in enumerate(sequences):
    # Get the cluster label
    label = cluster_labels[i]

    # If the label is not in the dictionary, create a new tree
    if label not in trees:
        # Get the sequences in the same cluster
        cluster_sequences = [seq for j, seq in enumerate(sequences) if cluster_labels[j] == label]
        # Create a distance matrix
        distance_matrix = distance.matrix(cluster_sequences, distance.hamming)
        # Construct a tree
        tree = upgma(distance_matrix)
        # Add the tree to the dictionary
        trees[label] = tree

# Create a list of trees
tree_list = [tree for label, tree in trees.items()]

# Create a consensus tree using the bootstrap function
consensus_tree = bootstrap(tree_list, 1000)

# Color tree branches based on the protein "group"
for clade in consensus_tree.find_clades():
    if "Insulin" in clade.name:
        clade.color = "red"
    elif "plastin" in clade.name:
        clade.color = "blue"
    elif "albumin" in clade.name:
        clade.color = "green"
    elif "alpha-fetoprotein" in clade.name:
        clade.color = "yellow"

